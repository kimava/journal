{"version":3,"sources":["styles/theme.js","styles/globalStyle.js","styles/grid.js","styles/headerStyle.js","service/firebase.js","features/users/userSlice.js","app/header.js","features/journals/journalsSlice.js","features/common/moodIcons.js","features/common/button.js","styles/formStyle.js","features/common/journalForm.js","features/journals/addJournalForm.js","styles/listStyle.js","features/common/modal.js","features/common/timeStamp.js","features/common/modalSlice.js","features/journals/journalsList.js","features/journals/singleJournal.js","features/journals/editJournalForm.js","features/users/login.js","features/users/signUp.js","features/users/resetPW.js","features/common/requireAuth.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["colors","pale","orange","gray","black","white","size","mainTheme","margins","small","regular","large","paddings","fonts","family","micro","medium","title","weight","bold","border","default","shadow","devices","mobile","tablet","desktop","GlobalStyle","createGlobalStyle","reset","theme","css","CustomContainer","styled","div","Grid","children","StyledHeader","firebaseApp","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","firebaseAuth","getAuth","googleProvider","GoogleAuthProvider","twitterProvider","TwitterAuthProvider","createUser","createAsyncThunk","form","a","email","password","createUserWithEmailAndPassword","alert","emailLogin","signInWithEmailAndPassword","res","user","uid","providerLogin","providerName","provider","getProvider","signInWithPopup","console","log","name","includes","Error","resetPassword","sendPasswordResetEmail","message","logout","signOut","userSlice","createSlice","initialState","userId","reducers","userSet","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","selectUserId","Header","dispatch","useDispatch","useSelector","to","onClick","React","memo","db","getDatabase","saveJournal","post","set","ref","id","error","deleteJournal","remove","journalId","journalsSlice","posts","status","journalAdded","selectAllJournals","journalDeleted","moodAdded","journals","moods","icon","faGrinStars","mood","faSmile","faMeh","faFrown","faAngry","Moods","handleMoodChange","isSelected","selected","map","type","value","checked","onChange","htmlFor","style","color","SelectedMood","filter","Button","disabled","rest","StyledBtn","button","StyledForm","article","JournalForm","content","selectedMood","setTitle","setContent","setSelectedMood","handleSave","able","Boolean","StyledSection","placeholder","event","target","StyledDiv","e","currentTarget","section","AddJournalForm","useState","nanoid","date","Date","toISOString","StyledList","Modal","show","modal","TimeStamp","timePeriod","timestamp","parseISO","format","undefined","modalSlice","open","close","JournalsList","contents","navigate","useNavigate","modalRef","useRef","allJournals","modalShow","journalsStatus","showModal","closeModal","useCallback","useEffect","window","addEventListener","removeEventListener","query","onValue","snapshot","result","val","fetchJournals","orderedJournals","Object","values","sort","b","localeCompare","keys","journal","substring","faEllipsisV","ButtonGroup","SingleJournal","useParams","key","find","EditJournalForm","Container","SignInForm","SignUpLink","SignInBtns","Div","Login","setForm","onFormChange","prev","onSNSSignIn","className","onUserChange","onAuthStateChanged","SignUp","ResetPW","setEmail","RequireAuth","App","path","element","store","configureStore","reducer","journalsReducer","userReducer","modalReducer","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5c2cfea.chunk.js","sourcesContent":["const margins = {\n  small: '0.5rem',\n  regular: '1rem',\n  large: '2rem',\n};\n\nconst paddings = {\n  small: '0.5rem',\n  regular: '1rem',\n  large: '2rem',\n};\n\nconst fonts = {\n  family: `'Dosis', sans-serif`,\n  size: {\n    micro: '0.875rem',\n    small: '1rem',\n    regular: '1.125rem',\n    medium: '1.4rem',\n    large: '3rem',\n    title: '6rem',\n  },\n  weight: {\n    regular: 400,\n    bold: 700,\n  },\n};\n\nconst colors = {\n  pale: '#faf4e6',\n  orange: '#e82f17',\n  gray: '#5e5c5a',\n  black: '#08090b',\n  white: '#ffffff',\n};\n\nconst border = {\n  default: `1px solid ${colors.black}`,\n};\n\nconst shadow = {\n  default: '6px 6px 0px 1px #000000;',\n};\n\nconst size = {\n  mobile: '26.563rem',\n  tablet: '48rem',\n  desktop: '90rem',\n};\n\nconst devices = {\n  mobile: `@media only screen and (max-width: ${size.mobile})`,\n  tablet: `@media only screen and (max-width: ${size.tablet})`,\n  desktop: `@media only screen and (max-width: ${size.desktop})`,\n};\n\nexport const mainTheme = {\n  margins,\n  paddings,\n  fonts,\n  colors,\n  border,\n  shadow,\n  devices,\n};\n","import { createGlobalStyle, css } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n${reset};\n${({ theme }) => {\n  return css`\n    * {\n      margin: 0;\n      box-sizing: border-box;\n    }\n\n    body {\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      height: 100vh;\n      font-family: ${theme.fonts.family};\n      background-color: ${theme.colors.pale};\n    }\n\n    input,\n    textarea {\n      font: inherit;\n      outline: none;\n    }\n\n    a {\n      text-decoration: none;\n      color: black;\n    }\n\n    a:hover {\n      color: ${theme.colors.orange};\n    }\n\n    p {\n      line-height: 1.5em;\n    }\n  `;\n}}\n`;\n\nexport default GlobalStyle;\n","import styled, { css } from 'styled-components';\n\nconst CustomContainer = styled.div`\n  ${({ theme }) => {\n    const { colors, devices, fonts, paddings } = theme;\n    return css`\n      width: 100%;\n      height: 90vh;\n      display: flex;\n      background-color: ${colors.pale};\n      ${devices.tablet} {\n        background-color: ${colors.white};\n        flex-direction: column;\n      }\n\n      h1 {\n        font-size: ${fonts.size.title};\n        padding: ${paddings.large};\n        text-align: center;\n      }\n    `;\n  }}\n`;\n\nconst Grid = ({ children }) => {\n  return <CustomContainer>{children}</CustomContainer>;\n};\n\nexport default Grid;\n","import styled, { css } from 'styled-components';\n\nconst StyledHeader = styled.div`\n  ${({ theme }) => {\n    const { paddings, border, fonts, colors } = theme;\n    return css`\n      padding: ${paddings.large};\n      display: flex;\n      justify-content: flex-end;\n      height: 10vh;\n      font-size: ${fonts.size.regular};\n      border-bottom: ${border.default};\n\n      a {\n        padding-right: ${paddings.large};\n      }\n\n      button {\n        font: inherit;\n        font-color: inherit;\n        font-size: ${fonts.size.regular};\n        border: none;\n        background: none;\n        cursor: pointer;\n      }\n\n      button:hover {\n        color: ${colors.orange};\n      }\n    `;\n  }}\n`;\n\nexport default StyledHeader;\n","import { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { firebaseApp } from '../../service/firebase';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  GoogleAuthProvider,\n  TwitterAuthProvider,\n  signInWithPopup,\n  onAuthStateChanged,\n} from 'firebase/auth';\n\nconst firebaseAuth = getAuth(firebaseApp);\nconst googleProvider = new GoogleAuthProvider();\nconst twitterProvider = new TwitterAuthProvider();\n\nexport const onAuthChange = (onUserChange) => {\n  onAuthStateChanged(firebaseAuth, (user) => {\n    onUserChange(user?.uid);\n  });\n};\n\nexport const createUser = createAsyncThunk('user/createUser', async (form) => {\n  try {\n    const { email, password } = form;\n    await createUserWithEmailAndPassword(firebaseAuth, email, password);\n    alert('created successfully!');\n  } catch (error) {\n    alert(`please check your email account again`);\n  }\n});\n\nexport const emailLogin = createAsyncThunk('user/emailLogin', async (form) => {\n  const { email, password } = form;\n  try {\n    const res = await signInWithEmailAndPassword(firebaseAuth, email, password);\n    return res.user.uid;\n  } catch (error) {\n    alert('incorrect email or password');\n  }\n});\n\nexport const providerLogin = createAsyncThunk(\n  'user/providerLogin',\n  async (providerName) => {\n    const provider = getProvider(providerName);\n    try {\n      const res = await signInWithPopup(firebaseAuth, provider);\n      return res.user.uid;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nfunction getProvider(name) {\n  const providerName = name.includes('google')\n    ? 'google'\n    : name.includes('twitter')\n    ? 'twitter'\n    : 'unknown';\n  switch (providerName) {\n    case 'google':\n      return googleProvider;\n    case 'twitter':\n      return twitterProvider;\n    default:\n      throw new Error(`unknown provider: ${name}`);\n  }\n}\n\nexport const resetPassword = createAsyncThunk(\n  'user/resetPassword',\n  async (email) => {\n    try {\n      await sendPasswordResetEmail(firebaseAuth, email);\n      alert('Reset email has been sent!');\n    } catch (error) {\n      alert('please check your account again');\n      console.log(error.message);\n    }\n  }\n);\n\nexport const logout = createAsyncThunk('user/logout', async () => {\n  try {\n    await firebaseAuth.signOut();\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nconst initialState = {\n  userId: null,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    userSet(state, action) {\n      state.userId = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(emailLogin.fulfilled, (state, action) => {\n        state.userId = action.payload;\n      })\n      .addCase(providerLogin.fulfilled, (state, action) => {\n        state.userId = action.payload;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.userId = null;\n      });\n  },\n});\n\nexport const { userSet } = userSlice.actions;\n\nexport const selectUserId = (state) => state.user.userId;\n\nexport default userSlice.reducer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport StyledHeader from '../styles/headerStyle';\nimport { logout, selectUserId } from '../features/users/userSlice';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n\n  const onLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <StyledHeader>\n      <Link to='/journal'>Journal</Link>\n      {userId && <button onClick={onLogout}>Sign Out</button>}\n    </StyledHeader>\n  );\n};\n\nexport default React.memo(Header);\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getDatabase, ref, set, remove, onValue } from 'firebase/database';\nimport { firebaseApp } from '../../service/firebase';\n\nconst db = getDatabase(firebaseApp);\n\nconst initialState = { posts: {}, status: 'idle', error: null };\n\nexport const fetchJournals = (userId) => {\n  return (dispatch) => {\n    const query = ref(db, `users/${userId}/journals`);\n    onValue(query, (snapshot) => {\n      const result = snapshot.val();\n      dispatch(journalAdded(result));\n    });\n  };\n};\n\nexport const saveJournal = createAsyncThunk('journals/saveJournal', (post) => {\n  try {\n    set(ref(db, `users/${post.userId}/journals/${post.id}`), post);\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const deleteJournal = createAsyncThunk(\n  `journals/deleteJournal`,\n  (post) => {\n    remove(ref(db, `users/${post.userId}/journals/${post.journalId}`));\n  }\n);\n\nexport const journalsSlice = createSlice({\n  name: 'journals',\n  initialState,\n  reducers: {\n    journalAdded(state, action) {\n      state.posts = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(saveJournal.fulfilled, (state, action) => {\n      state.status = 'idle';\n    });\n  },\n});\n\nexport const { journalAdded, journalDeleted, moodAdded } =\n  journalsSlice.actions;\n\nexport const selectAllJournals = (state) => state.journals.posts;\n\nexport default journalsSlice.reducer;\n","import React from 'react';\nimport {\n  faGrinStars,\n  faSmile,\n  faMeh,\n  faFrown,\n  faAngry,\n} from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst moods = [\n  { icon: faGrinStars, mood: 'super' },\n  { icon: faSmile, mood: 'good' },\n  { icon: faMeh, mood: 'soso' },\n  { icon: faFrown, mood: 'bad' },\n  { icon: faAngry, mood: 'angry' },\n];\n\nexport const Moods = ({ handleMoodChange, isSelected, selected }) => {\n  return moods.map((mood) => (\n    <div key={mood.mood}>\n      <input\n        type='radio'\n        name='mood'\n        value={mood.mood}\n        id={mood.mood}\n        checked={isSelected(mood.mood)}\n        onChange={handleMoodChange}\n      />\n      <label htmlFor={mood.mood}>\n        <FontAwesomeIcon\n          icon={mood.icon}\n          size='2x'\n          style={\n            selected === mood.mood ? { color: 'e82f17' } : { color: '#5e5c5a' }\n          }\n        />\n      </label>\n    </div>\n  ));\n};\n\nexport const SelectedMood = (selected) => {\n  const rendered = moods.filter((mood) => mood.mood === selected.mood);\n  const icon = rendered[0].icon;\n\n  return <FontAwesomeIcon icon={icon} size='2x' color='#e82f17' />;\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nfunction Button({ disabled, children, ...rest }) {\n  return (\n    <StyledBtn disabled={disabled} {...rest}>\n      {children}\n    </StyledBtn>\n  );\n}\n\nexport default Button;\n\nconst StyledBtn = styled.button`\n  ${({ theme }) => {\n    const { paddings, fonts, colors, border, shadow } = theme;\n    return css`\n      margin: auto;\n      margin-top: 0;\n      margin-bottom: 0;\n      padding: ${paddings.small} ${paddings.large};\n      display: block;\n      outline: none;\n      fonts: ${fonts.family};\n      font-size: ${fonts.size.regular};\n      color: ${colors.black};\n      border: ${border.default};\n      background: ${colors.orange};\n      box-shadow: ${shadow.default};\n      cursor: pointer;\n\n      &:disabled,\n      &:disabled:hover {\n        opacity: 0.7;\n        cursor: default;\n      }\n    `;\n  }}\n`;\n","import styled, { css } from 'styled-components';\n\nconst StyledForm = styled.article`\n  ${({ theme }) => {\n    const { margins, paddings, fonts, border } = theme;\n    return css`\n      margin-bottom: ${margins.regular};\n      width: 100%;\n      height: 60%;\n      font: ${fonts.family};\n      font-size: ${fonts.size.regular};\n\n      input {\n        margin-bottom: ${margins.regular};\n        padding: ${paddings.small};\n        width: 100%;\n        background-color: transparent;\n        border: ${border.default};\n      }\n\n      textarea {\n        width: 100%;\n        height: 70%;\n        padding: ${paddings.small};\n        white-space: pre-wrap;\n        background-color: transparent;\n        border: ${border.default};\n      }\n    `;\n  }}\n`;\n\nexport default StyledForm;\n","import React from 'react';\nimport { Moods } from './moodIcons';\nimport Button from '../common/button';\nimport StyledForm from '../../styles/formStyle';\nimport styled, { css } from 'styled-components';\n\nexport const JournalForm = ({\n  title,\n  content,\n  selectedMood,\n  setTitle,\n  setContent,\n  setSelectedMood,\n  handleSave,\n}) => {\n  const onTitleChange = (event) => setTitle(event.target.value);\n\n  const onContentChange = (event) => setContent(event.target.value);\n\n  const isSelected = (value) => selectedMood === value;\n\n  const handleMoodChange = (e) => {\n    setSelectedMood(e.currentTarget.value);\n  };\n\n  const onSaveJournal = () => {\n    handleSave();\n  };\n\n  const able = Boolean(title) && Boolean(content) && Boolean(selectedMood);\n\n  return (\n    <StyledSection>\n      <StyledForm>\n        <label htmlFor='journalTitle'></label>\n        <input\n          type='text'\n          id='journalTitle'\n          name='journalTitle'\n          placeholder='Title goes here'\n          value={title}\n          onChange={onTitleChange}\n        />\n        <label htmlFor='journalContent'></label>\n        <textarea\n          id='journalContent'\n          name='journalContent'\n          value={content}\n          onChange={onContentChange}\n        />\n        <StyledDiv>\n          <Moods\n            handleMoodChange={handleMoodChange}\n            isSelected={isSelected}\n            selected={selectedMood}\n          />\n        </StyledDiv>\n      </StyledForm>\n\n      <Button onClick={onSaveJournal} disabled={!able}>\n        Save\n      </Button>\n    </StyledSection>\n  );\n};\n\nexport const StyledSection = styled.section`\n  ${({ theme }) => {\n    const { margins, paddings, fonts, border } = theme;\n    return css`\n      padding: ${paddings.large};\n      flex: 1 1 60%;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      border: ${border.default};\n      border-top: none;\n      border-right: none;\n\n      h2 {\n        margin-bottom: ${margins.large};\n        font-size: ${fonts.size.medium};\n      }\n    `;\n  }}\n`;\n\nconst StyledDiv = styled.div`\n  ${({ theme }) => {\n    const { margins, paddings } = theme;\n    return css`\n      padding: ${paddings.small};\n      padding-left: 0;\n      display: flex;\n      input {\n        display: none;\n      }\n      label {\n        margin-right: ${margins.small};\n      }\n    `;\n  }}\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { saveJournal } from './journalsSlice';\nimport { selectUserId } from '../users/userSlice';\nimport { JournalForm } from '../common/journalForm';\n\nconst AddJournalForm = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedMood, setSelectedMood] = useState('');\n\n  const handleSave = () => {\n    if (title && content && selectedMood) {\n      dispatch(\n        saveJournal({\n          userId,\n          id: nanoid(),\n          date: new Date().toISOString(),\n          title,\n          content,\n          mood: selectedMood,\n        })\n      );\n      setTitle('');\n      setContent('');\n      setSelectedMood('');\n    }\n  };\n\n  return (\n    <>\n      <JournalForm\n        title={title}\n        content={content}\n        selectedMood={selectedMood}\n        setTitle={setTitle}\n        setContent={setContent}\n        setSelectedMood={setSelectedMood}\n        handleSave={handleSave}\n      />\n    </>\n  );\n};\n\nexport default AddJournalForm;\n","import styled, { css } from 'styled-components';\n\nconst StyledList = styled.article`\n  ${({ theme }) => {\n    const { margins, paddings, fonts, border, shadow } = theme;\n    return css`\n      margin: auto;\n      margin-bottom: ${margins.regular};\n      padding: ${paddings.regular};\n      position: relative;\n      display: flex;\n      width: 100%;\n      border: ${border.default};\n      box-shadow: ${shadow.default};\n      -webkit-box-shadow: ${shadow.default};\n\n      div {\n        margin-left: ${margins.small};\n      }\n\n      h3 {\n        margin-bottom: ${margins.small};\n        display: inline-block;\n        font-size: ${fonts.size.medium};\n      }\n\n      p {\n        margin-bottom: ${margins.small};\n        font-size: ${fonts.size.regular};\n      }\n\n      span {\n        margin-bottom: ${margins.small};\n        display: block;\n      }\n    `;\n  }}\n`;\n\nexport default StyledList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nconst Modal = ({ journalId, children }) => {\n  const show = useSelector((state) => state.modal.show);\n  const id = useSelector((state) => state.modal.id);\n\n  if (!show || journalId !== id) {\n    return null;\n  }\n\n  return <StyledDiv>{children}</StyledDiv>;\n};\n\nconst StyledDiv = styled.div`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: 1rem;\n  right: 3rem;\n  width: 15rem;\n  height: 6rem;\n  background-color: #fffef9;\n  text-align: center;\n  z-index: 1;\n\n  span {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 3rem;\n    line-height: 3rem;\n  }\n\n  span:hover {\n    background-color: #ffccbc;\n  }\n`;\n\nexport default Modal;\n","import React from 'react';\nimport { parseISO, format } from 'date-fns';\n\nconst TimeStamp = ({ timestamp }) => {\n  let timePeriod;\n  if (timestamp) {\n    const date = parseISO(timestamp);\n    timePeriod = format(date, `yyyy-MM-dd`);\n  }\n\n  return <span title={timestamp}>{timePeriod}</span>;\n};\n\nexport default TimeStamp;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  show: false,\n  id: undefined,\n};\n\nexport const modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    open: (state, action) => {\n      const { id } = action.payload;\n      state.show = true;\n      state.id = id;\n    },\n\n    close: (state) => {\n      state.show = false;\n    },\n  },\n});\n\nexport const { open, close } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled, { css } from 'styled-components';\nimport StyledList from '../../styles/listStyle';\nimport Modal from '../common/modal';\nimport TimeStamp from '../common/timeStamp';\nimport { SelectedMood } from '../common/moodIcons';\nimport {\n  deleteJournal,\n  fetchJournals,\n  selectAllJournals,\n} from './journalsSlice';\nimport { selectUserId } from '../users/userSlice';\nimport { open, close } from '../common/modalSlice';\n\nconst JournalsList = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const modalRef = useRef();\n  const userId = useSelector(selectUserId);\n  const allJournals = useSelector(selectAllJournals);\n  const modalShow = useSelector((state) => state.modal.show);\n  const journalsStatus = useSelector((state) => state.journals.status);\n\n  const showModal = (e) => {\n    dispatch(open({ id: e.currentTarget.id }));\n  };\n\n  const closeModal = useCallback(\n    (e) => {\n      if (modalShow) {\n        dispatch(close());\n      }\n    },\n    [dispatch, modalShow]\n  );\n\n  const onEdit = (id) => {\n    dispatch(close());\n    navigate(`/editJournal/${id}`);\n  };\n\n  const onDelete = (id) => {\n    dispatch(deleteJournal({ userId, journalId: id }));\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', closeModal);\n    return () => {\n      window.removeEventListener('click', closeModal);\n    };\n  }, [closeModal]);\n\n  useEffect(() => {\n    if (journalsStatus === 'idle') {\n      dispatch(fetchJournals(userId));\n    }\n  }, [journalsStatus, dispatch, userId]);\n\n  let contents;\n\n  if (allJournals) {\n    const orderedJournals = Object.values(allJournals).sort((a, b) =>\n      b.date.localeCompare(a.date)\n    );\n\n    contents = Object.keys(orderedJournals).map((journal) => {\n      let post = orderedJournals[journal];\n      return (\n        <StyledList key={post.id}>\n          <SelectedMood mood={post.mood} />\n          <div>\n            <h3>{post.title}</h3>\n            <TimeStamp timestamp={post.date} />\n            <p>{post.content.substring(0, 60)}</p>\n\n            <Link to={`/journals/${post.id}`}>→ VIEW</Link>\n          </div>\n          <div>\n            <button id={post.id} onClick={showModal}>\n              <FontAwesomeIcon icon={faEllipsisV} size='2x' />\n            </button>\n            <div ref={modalRef}>\n              <Modal journalId={post.id}>\n                <span\n                  onClick={() => {\n                    onEdit(post.id);\n                  }}\n                >\n                  edit\n                </span>\n                <span\n                  onClick={() => {\n                    onDelete(post.id);\n                  }}\n                >\n                  delete\n                </span>\n              </Modal>\n            </div>\n          </div>\n        </StyledList>\n      );\n    });\n  } else {\n    contents = <p>no posts yet</p>;\n  }\n\n  return <StyledSection>{contents}</StyledSection>;\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => {\n    const { paddings, border } = theme;\n    return css`\n      padding: ${paddings.large};\n      flex: 1 1 40%;\n      border: ${border.default};\n      border-top: none;\n      overflow-y: scroll;\n\n      button {\n        padding: 0.5rem;\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background-color: inherit;\n        border: none;\n        cursor: pointer;\n      }\n    `;\n  }}\n`;\n\nexport default JournalsList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport Button from '../common/button';\nimport TimeStamp from '../common/timeStamp';\nimport { selectUserId } from '../users/userSlice';\nimport { deleteJournal, selectAllJournals } from './journalsSlice';\n\nconst SingleJournal = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { journalId } = useParams();\n  const userId = useSelector(selectUserId);\n  const allJournals = useSelector(selectAllJournals);\n  const key = Object.keys(allJournals).find(\n    (journal) => allJournals[journal].id === journalId\n  );\n  const journal = allJournals[key];\n\n  const onDeleteJournal = () => {\n    dispatch(deleteJournal({ userId, journalId }));\n    navigate(`/`);\n  };\n\n  if (!journal) {\n    return <h1>page not found</h1>;\n  }\n  return (\n    <StyledSection>\n      <h1>{journal.title}</h1>\n      <TimeStamp timestamp={journal.date} />\n      <p>{journal.content}</p>\n\n      <ButtonGroup>\n        <Link to={`/editJournal/${journal.id}`}>\n          <Button>Edit</Button>\n        </Link>\n\n        <Button onClick={onDeleteJournal}>Delete</Button>\n      </ButtonGroup>\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => {\n    const { margins, paddings, fonts } = theme;\n    return css`\n      margin: auto;\n      padding: ${paddings.large};\n      max-width: 50rem;\n\n      h1 {\n        margin-bottom: ${margins.large};\n        font-size: ${fonts.size.large};\n      }\n\n      span {\n        margin-bottom: ${margins.large};\n        display: block;\n        font-style: italic;\n      }\n\n      p {\n        margin-bottom: ${margins.large};\n        font-size: ${fonts.size.medium};\n        white-space: pre-wrap;\n      }\n\n      a:hover {\n        color: black;\n      }\n    `;\n  }}\n`;\n\nconst ButtonGroup = styled.div`\n  margin: auto;\n  max-width: 50%;\n  display: flex;\n  justify-content: flex-end;\n\n  button {\n    width: 8rem;\n  }\n`;\n\nexport default SingleJournal;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { saveJournal, selectAllJournals } from './journalsSlice';\nimport { JournalForm, StyledSection } from '../common/journalForm';\n\nconst EditJournalForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { journalId } = useParams();\n  const allJournals = useSelector(selectAllJournals);\n  const key = Object.keys(allJournals).find(\n    (journal) => allJournals[journal].id === journalId\n  );\n  const journal = allJournals[key];\n\n  const [title, setTitle] = useState(journal.title);\n  const [content, setContent] = useState(journal.content);\n  const [selectedMood, setSelectedMood] = useState(journal.mood);\n\n  const handleSave = () => {\n    if (title && content && selectedMood) {\n      dispatch(\n        saveJournal({\n          ...journal,\n          id: journalId,\n          title,\n          content,\n          mood: selectedMood,\n        })\n      );\n      navigate(`/journals/${journalId}`);\n    }\n  };\n\n  return (\n    <StyledDiv>\n      <JournalForm\n        title={title}\n        content={content}\n        selectedMood={selectedMood}\n        setTitle={setTitle}\n        setContent={setContent}\n        setSelectedMood={setSelectedMood}\n        handleSave={handleSave}\n      />\n    </StyledDiv>\n  );\n};\n\nconst StyledDiv = styled.section`\n  margin: auto;\n  max-width: 50rem;\n\n  ${StyledSection} {\n    height: 90vh;\n    border: none;\n  }\n`;\n\nexport default EditJournalForm;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  userSet,\n  emailLogin,\n  providerLogin,\n  selectUserId,\n  onAuthChange,\n} from './userSlice';\nimport styled from 'styled-components';\nimport { FcGoogle } from 'react-icons/fc';\nimport { AiFillTwitterCircle } from 'react-icons/ai';\nimport Button from '../common/button';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userId = useSelector(selectUserId);\n\n  const [form, setForm] = useState({ email: '', password: '' });\n\n  const onFormChange = ({ target: { name, value } }) => {\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const onEmailSignIn = () => {\n    dispatch(emailLogin(form));\n    setForm({ email: '', password: '' });\n  };\n\n  const onSNSSignIn = ({ target: { className } }) => {\n    dispatch(providerLogin(className));\n  };\n\n  const onSignup = () => {\n    navigate('/signup');\n  };\n\n  const onResetFW = () => {\n    navigate('/newpassword');\n  };\n\n  useEffect(() => {\n    onAuthChange((user) => {\n      user ? dispatch(userSet(user)) : dispatch(userSet(null));\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    userId && navigate('/journal');\n  }, [navigate, userId]);\n\n  return (\n    <Container>\n      <h1>Sign in to Journal</h1>\n      <SignInForm>\n        <input\n          onChange={onFormChange}\n          name='email'\n          type='text'\n          placeholder='Email'\n          value={form.email}\n        />\n        <input\n          onChange={onFormChange}\n          name='password'\n          type='password'\n          placeholder='Password'\n          value={form.password}\n        />\n        <span onClick={onResetFW}>Forgot password?</span>\n        <Button onClick={onEmailSignIn} className='email'>\n          Sign in\n        </Button>\n      </SignInForm>\n      <SignUpLink>\n        <span onClick={onSignup}>Wanna sign up?</span>\n      </SignUpLink>\n\n      <h2>⎯ &nbsp;&nbsp; or sign in with &nbsp;&nbsp;⎯</h2>\n      <SignInBtns>\n        <Div onClick={onSNSSignIn} className='google'>\n          <FcGoogle size='40' />\n        </Div>\n        <Div onClick={onSNSSignIn} className='twitter'>\n          <AiFillTwitterCircle size='40' color='#1da1f2' />\n        </Div>\n      </SignInBtns>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 25rem;\n  height: 70vh;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  transform: translate(-50%, -50%);\n\n  h1 {\n    margin-bottom: 2rem;\n    font-size: 1.5rem;\n  }\n\n  h2 {\n    margin-bottom: 1.5rem;\n    font-size: 1.3rem;\n  }\n`;\n\nconst SignInForm = styled.div`\n  margin-bottom: 1rem;\n  padding: 3rem 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #fffef9;\n  border: 1px solid black;\n\n  input {\n    margin-bottom: 1rem;\n    padding: 0.5rem;\n    width: 90%;\n    background-color: inherit;\n    border: 1px solid black;\n    outline: none;\n  }\n\n  input:hover {\n    border: 1px solid #e82f17;\n    transition: 0.3s ease-in-out;\n  }\n\n  span {\n    margin: auto;\n    margin-bottom: 3rem;\n    width: 90%;\n    text-align: right;\n    cursor: pointer;\n  }\n`;\n\nconst SignUpLink = styled.div`\n  margin-bottom: 2rem;\n  padding: 1rem 1rem;\n  background-color: #fffef9;\n  border: 1px solid black;\n\n  span {\n    cursor: pointer;\n  }\n`;\nconst SignInBtns = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Div = styled.div`\n  display: inline-block;\n  margin-right: 1rem;\n  cursor: pointer;\n\n  svg {\n    pointer-events: none;\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\nexport default Login;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { createUser, selectUserId } from './userSlice';\nimport styled from 'styled-components';\nimport Button from '../common/button';\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n  const [form, setForm] = useState({ email: '', password: '' });\n\n  if (userId) {\n    return <Navigate to='/' />;\n  }\n\n  const onChange = ({ target: { name, value } }) => {\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const onSignUp = () => {\n    dispatch(createUser(form));\n    setForm({ email: '', password: '' });\n  };\n\n  return (\n    <Container>\n      <h1>Create a new account</h1>\n      <input\n        onChange={onChange}\n        name='email'\n        type='text'\n        placeholder='Email'\n        value={form.email}\n      />\n      <input\n        onChange={onChange}\n        name='password'\n        type='password'\n        placeholder='Password'\n        value={form.password}\n      />\n      <Button onClick={onSignUp}>Sign Up</Button>\n    </Container>\n  );\n};\n\nexport default SignUp;\n\nconst Container = styled.div`\n  margin: auto;\n  padding: 2rem 0;\n  width: 80%;\n  text-align: center;\n\n  h1 {\n    margin-bottom: 2rem;\n    font-size: 2rem;\n  }\n\n  input {\n    margin-bottom: 1rem;\n    padding: 0.5rem;\n    width: 70%;\n    background-color: inherit;\n    border: 1px solid black;\n    outline: none;\n\n    &:last-child {\n      margin-bottom: 3rem;\n    }\n  }\n\n  input:hover {\n    border: 1px solid #e82f17;\n    transition: 0.3s ease-in-out;\n  }\n\n  button {\n    margin-top: 3rem;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from './userSlice';\nimport Button from '../common/button';\nimport styled from 'styled-components';\n\nconst ResetPW = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n\n  const onSend = () => {\n    dispatch(resetPassword(email));\n    setEmail('');\n  };\n\n  const onChange = ({ target: { value } }) => {\n    setEmail(value);\n  };\n\n  return (\n    <Container>\n      <h1>Forgot your Password?</h1>\n      <p>\n        Enter the email you signed up with and we will send you reset\n        instructions.\n      </p>\n      <input\n        onChange={onChange}\n        name='email'\n        type='text'\n        placeholder='Email'\n        value={email}\n      />\n      <Button onClick={onSend}>Send</Button>\n    </Container>\n  );\n};\n\nexport default ResetPW;\n\nconst Container = styled.div`\n  margin: auto;\n  padding: 2rem 0;\n  width: 80%;\n  text-align: center;\n\n  h1 {\n    margin-bottom: 2rem;\n    font-size: 2rem;\n  }\n\n  p {\n    margin-bottom: 3rem;\n  }\n\n  input {\n    margin-bottom: 3rem;\n    padding: 0.5rem;\n    width: 70%;\n    background-color: inherit;\n    border: 1px solid black;\n    outline: none;\n  }\n\n  input:hover {\n    border: 1px solid #e82f17;\n    transition: 0.3s ease-in-out;\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectUserId } from '../users/userSlice';\n\nconst RequireAuth = ({ children }) => {\n  const userId = useSelector(selectUserId);\n\n  if (!userId) {\n    return <Navigate to='/login' />;\n  }\n\n  return children;\n};\n\nexport default RequireAuth;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { mainTheme } from './styles/theme';\nimport GlobalStyle from './styles/globalStyle';\nimport Grid from './styles/grid';\nimport Header from './app/header';\nimport AddJournalForm from './features/journals/addJournalForm';\nimport JournalsList from './features/journals/journalsList';\nimport SingleJournal from './features/journals/singleJournal';\nimport EditJournalForm from './features/journals/editJournalForm';\nimport Login from './features/users/login';\nimport SignUp from './features/users/signUp';\nimport ResetPW from './features/users/resetPW';\nimport RequireAuth from './features/common/requireAuth';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={mainTheme}>\n      <GlobalStyle />\n      <Router>\n        <Header />\n        <div className='App'>\n          <Routes>\n            <Route\n              path='/journal'\n              element={\n                <RequireAuth>\n                  <Grid>\n                    <AddJournalForm />\n                    <JournalsList />\n                  </Grid>\n                </RequireAuth>\n              }\n            />\n            <Route\n              path='/journals/:journalId'\n              element={\n                <RequireAuth>\n                  <SingleJournal />\n                </RequireAuth>\n              }\n            />\n            <Route\n              path='/editJournal/:journalId'\n              element={\n                <RequireAuth>\n                  <EditJournalForm />\n                </RequireAuth>\n              }\n            />\n            <Route path='/signup' element={<SignUp />} />\n            <Route path='/login' element={<Login />} />\n            <Route path='/newpassword' element={<ResetPW />} />\n          </Routes>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport journalsReducer from '../features/journals/journalsSlice';\nimport userReducer from '../features/users/userSlice';\nimport modalReducer from '../features/common/modalSlice';\n\nexport const store = configureStore({\n  reducer: {\n    journals: journalsReducer,\n    user: userReducer,\n    modal: modalReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}